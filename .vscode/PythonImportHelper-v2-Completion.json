[
    {
        "label": "asyncio",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "asyncio",
        "description": "asyncio",
        "detail": "asyncio",
        "documentation": {}
    },
    {
        "label": "List",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Dict",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Optional",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "List",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Dict",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "SearchRequest",
        "importPath": "libgen_api_modern.search_request",
        "description": "libgen_api_modern.search_request",
        "isExtraImport": true,
        "detail": "libgen_api_modern.search_request",
        "documentation": {}
    },
    {
        "label": "urllib.parse",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "urllib.parse",
        "description": "urllib.parse",
        "detail": "urllib.parse",
        "documentation": {}
    },
    {
        "label": "re",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "re",
        "description": "re",
        "detail": "re",
        "documentation": {}
    },
    {
        "label": "ClientSession",
        "importPath": "aiohttp",
        "description": "aiohttp",
        "isExtraImport": true,
        "detail": "aiohttp",
        "documentation": {}
    },
    {
        "label": "BeautifulSoup",
        "importPath": "bs4",
        "description": "bs4",
        "isExtraImport": true,
        "detail": "bs4",
        "documentation": {}
    },
    {
        "label": "Tag",
        "importPath": "bs4.element",
        "description": "bs4.element",
        "isExtraImport": true,
        "detail": "bs4.element",
        "documentation": {}
    },
    {
        "label": "dumps",
        "importPath": "json",
        "description": "json",
        "isExtraImport": true,
        "detail": "json",
        "documentation": {}
    },
    {
        "label": "pytest",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "pytest",
        "description": "pytest",
        "detail": "pytest",
        "documentation": {}
    },
    {
        "label": "LibgenSearch",
        "importPath": "libgen_api_modern.libgen_search",
        "description": "libgen_api_modern.libgen_search",
        "isExtraImport": true,
        "detail": "libgen_api_modern.libgen_search",
        "documentation": {}
    },
    {
        "label": "LibgenSearch",
        "kind": 6,
        "importPath": "libgen_api_modern.libgen_search",
        "description": "libgen_api_modern.libgen_search",
        "peekOfCode": "class LibgenSearch:\n    @staticmethod\n    async def search_scientific_articles(\n        query: str\n    ) -> List[Dict[str, str]]:\n        \"\"\"\n        Searches for scientific articles based on the given query.\n        Args:\n            query (str): The search query.\n        Raises:",
        "detail": "libgen_api_modern.libgen_search",
        "documentation": {}
    },
    {
        "label": "SearchRequest",
        "kind": 6,
        "importPath": "libgen_api_modern.search_request",
        "description": "libgen_api_modern.search_request",
        "peekOfCode": "class SearchRequest:\n    col_names = [\n        \"ID\",\n        \"Author(s)\",\n        \"Title\",\n        \"Series\",\n        \"Publisher\",\n        \"Edition\",\n        \"Year\",\n        \"Pages\",",
        "detail": "libgen_api_modern.search_request",
        "documentation": {}
    },
    {
        "label": "TestLibgenSearch",
        "kind": 6,
        "importPath": "tests.test_libgen",
        "description": "tests.test_libgen",
        "peekOfCode": "class TestLibgenSearch:\n    # search_fiction returns a list of fiction books for a valid query\n    @pytest.mark.asyncio\n    async def test_search_fiction_valid_query(self, mocker):\n        mocker.patch('libgen_api_modern.search_request.SearchRequest.aggregate_fiction_data', return_value=[{\"Title\": \"Pirate Adventures\"}])\n        result = await LibgenSearch.search_fiction(\"pirate\")\n        assert result == [{\"Title\": \"Pirate Adventures\"}], \"Arrr! The search results be not what I expected!\"\n    # search_fiction_filtered returns filtered fiction books based on provided filters\n    @pytest.mark.asyncio\n    async def test_search_fiction_filtered_valid_query(self, mocker):",
        "detail": "tests.test_libgen",
        "documentation": {}
    }
]